// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ozbek.Bank.Repository;

#nullable disable

namespace Ozbek.Bank.Repository.Migrations
{
    [DbContext(typeof(OzbekBankDbContext))]
    partial class OzbekBankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ozbek.Bank.Core.Models.Entity.AccountType", b =>
                {
                    b.Property<int>("AccounTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccounTypeId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AccounTypeId");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            AccounTypeId = 1,
                            CreatedDate = new DateTime(2022, 11, 20, 20, 39, 46, 78, DateTimeKind.Local).AddTicks(5846),
                            Name = "TL"
                        },
                        new
                        {
                            AccounTypeId = 2,
                            CreatedDate = new DateTime(2022, 11, 20, 20, 39, 46, 78, DateTimeKind.Local).AddTicks(5858),
                            Name = "EUR"
                        },
                        new
                        {
                            AccounTypeId = 3,
                            CreatedDate = new DateTime(2022, 11, 20, 20, 39, 46, 78, DateTimeKind.Local).AddTicks(5859),
                            Name = "USD"
                        });
                });

            modelBuilder.Entity("Ozbek.Bank.Core.Models.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2022, 11, 20, 20, 39, 46, 78, DateTimeKind.Local).AddTicks(6146),
                            FirstName = "Abdussamet",
                            IdentityNumber = "01234567890",
                            LastName = "Özbek",
                            Pin = "1234"
                        });
                });

            modelBuilder.Entity("Ozbek.Bank.Core.Models.Entity.UserAccount", b =>
                {
                    b.Property<int>("UserAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAccountId"));

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserAccountId");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAccounts");

                    b.HasData(
                        new
                        {
                            UserAccountId = 1,
                            AccountTypeId = 1,
                            Balance = 1500m,
                            CreatedDate = new DateTime(2022, 11, 20, 20, 39, 46, 78, DateTimeKind.Local).AddTicks(6033),
                            UserId = 1
                        },
                        new
                        {
                            UserAccountId = 2,
                            AccountTypeId = 2,
                            Balance = 100m,
                            CreatedDate = new DateTime(2022, 11, 20, 20, 39, 46, 78, DateTimeKind.Local).AddTicks(6035),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Ozbek.Bank.Core.Models.Entity.UserAccount", b =>
                {
                    b.HasOne("Ozbek.Bank.Core.Models.Entity.AccountType", "AccountType")
                        .WithMany("UserAccounts")
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ozbek.Bank.Core.Models.Entity.User", "User")
                        .WithMany("UserAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ozbek.Bank.Core.Models.Entity.AccountType", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("Ozbek.Bank.Core.Models.Entity.User", b =>
                {
                    b.Navigation("UserAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
